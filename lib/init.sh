# generate_scripts

. ./lib/read_ini.sh
read_ini "./config.ini"

function generate_schema(){
    local section=$1
    local name="INI__${section}__name"
    local type="INI__${section}__type"
    local default="INI__${section}__default"
    echo "    ${!name} ${!type} DEFAULT '${!default}'," >> SCHEMA.sql
}

function generate_inputs() {
    local section=$1
    local name="INI__${section}__name"
    local prompt="INI__${section}__prompt"

    echo "
read -p \"${!prompt} [\$${!name}_input]: \" ${!name}" >> lib/input.sh 
    echo "if [[ -z \"\$${!name}\" ]]  && [[ ! -z \"\$${!name}_input\" ]]" >> lib/input.sh
    echo "then
    ${!name}=\$${!name}_input
fi" >> lib/input.sh
    echo "
sqlite3 \$_arg_database \"insert into habits (date, ${!name}) values ((date('now','localtime')), '\$${!name}') on conflict(date) do update set ${!name}='\$${!name}';\"" >> lib/input.sh
}

echo "Clearing existing files..."
rm SCHEMA.sql   # Clears the existing SCHEMA.sql
rm lib/input.sh # Clears the existing run scripts

echo "Generating SCHEMA.sql..."
echo "-- Autogenerated SCHEMA.sql

CREATE TABLE IF NOT EXISTS habits (
    date    DATE DEFAULT ( date('now','locatime') ) UNIQUE," >> SCHEMA.sql

for section in ${INI__ALL_SECTIONS}; do
    generate_schema $section
    generate_inputs $section
done

echo -e "    notes TEXT\n);" >> SCHEMA.sql

echo "TODO: Generate today.sh..."
echo "TODO: Generating tests..."
# generate tests

echo "All set! Have fun tracking!"

exit 0